// <auto-generated />
using System;
using ClothingStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClothingStore.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20220816104052_MainDbInitial2")]
    partial class MainDbInitial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClothingStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "товары для женщин",
                            Name = "Woman Store"
                        },
                        new
                        {
                            Id = 2,
                            Description = "аксессуары",
                            Name = "Accesories"
                        },
                        new
                        {
                            Id = 3,
                            Description = "товары для мужчин",
                            Name = "Man Store"
                        },
                        new
                        {
                            Id = 4,
                            Description = "обувь",
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 5,
                            Description = "распродажа",
                            Name = "Sale"
                        },
                        new
                        {
                            Id = 6,
                            Description = "винтажные вещи",
                            Name = "Vintage"
                        });
                });

            modelBuilder.Entity("ClothingStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("CustomerSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<bool>("Shipped")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ClothingStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Available")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Available = 0,
                            CategoryId = 3,
                            ImageUrl = "/img/branded/vans_tshirt.png",
                            IsFavorite = true,
                            Name = "VANS T-SHIRT",
                            Price = 30m
                        },
                        new
                        {
                            Id = 2,
                            Available = 0,
                            CategoryId = 3,
                            ImageUrl = "/img/branded/sweater.png",
                            IsFavorite = true,
                            Name = "RUBY SWEATER",
                            Price = 65m
                        },
                        new
                        {
                            Id = 3,
                            Available = 0,
                            CategoryId = 3,
                            ImageUrl = "/img/branded/coat.png",
                            IsFavorite = true,
                            Name = "MEN'S COAT",
                            Price = 140m
                        },
                        new
                        {
                            Id = 4,
                            Available = 0,
                            CategoryId = 3,
                            ImageUrl = "/img/hoodie.png",
                            IsFavorite = false,
                            Name = "HOODIE",
                            Price = 30m
                        },
                        new
                        {
                            Id = 5,
                            Available = 0,
                            CategoryId = 3,
                            ImageUrl = "/img/hoodie2.png",
                            IsFavorite = false,
                            Name = "HOODIE",
                            Price = 65m
                        },
                        new
                        {
                            Id = 6,
                            Available = 0,
                            CategoryId = 3,
                            ImageUrl = "/img/jeans.png",
                            IsFavorite = false,
                            Name = "JEANS",
                            Price = 140m
                        });
                });

            modelBuilder.Entity("ClothingStore.Models.ShopCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopCartItem");
                });

            modelBuilder.Entity("ClothingStore.Models.Product", b =>
                {
                    b.HasOne("ClothingStore.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ClothingStore.Models.ShopCartItem", b =>
                {
                    b.HasOne("ClothingStore.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("ClothingStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ClothingStore.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ClothingStore.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
